@using BlazorToDoList.Data;
@using BlazorToDoList.Services;
@inherits LayoutComponentBase
@inject IUserService UserService;
@inject NavigationManager NavigationManager;

<PageTitle>BlazorToDoList</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu hide="@Hide" currentUser="@CurrentUser"  />
    </div>
    <main>
        <div class="top-row px-4">
            @if(CurrentUser != null)
            {
                @if (!ConfirmLogOut)
                {
                    <button @onclick="() => ToggleLogOut()" class="btn btn-primary">Log Out</button>   
                }
                else if (ConfirmLogOut)
                {
                    <p class="mt-2">Are you sure?</p>
                    <button @onclick="() => LogOut()" class="btn btn-primary ms-lg-2">Yes</button>
                    <button @onclick="() => ToggleLogOut()" class="btn btn-secondary ms-lg-2">No</button>
                }               
            }
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    public UserItem? CurrentUser { get; set; }
    public bool Hide { get; set; } = true;
    public bool ConfirmLogOut { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            CurrentUser = await UserService.GetSingleUserAsync();
            Hide = false;
        }
        catch (Exception)
        {
            CurrentUser = null;
        }
    }

    public async Task LogOut()
    {
        try
        {
            await UserService.Logout();
            NavigationManager.NavigateTo("/", true);
        }
        catch (Exception)
        {   
            throw;
        }
        
    }

    public void ToggleLogOut()
    {
        ConfirmLogOut = !ConfirmLogOut;
    }
}
