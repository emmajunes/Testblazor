@page "/EditList"
@using BlazorToDoList.Data;
@using BlazorToDoList.Services;
@using ToDoList.API;
@inject IListService ListService;
@inject NavigationManager NavigationManager;

<h3>Edit list</h3>

<div>
    <EditForm Model="@listItem" OnSubmit="@OnSubmit">
        New title: <br />
        <InputText id="title" @bind-Value="listItem.ListTitle" />
        <br /><br />
        New titlecolor:
        <br />
        <InputSelect id="color" @bind-Value="listItem.TitleColor" class="form-control w-25">  
            @foreach (var color in Enum.GetValues(typeof(Color)))
            {
                    <option value="@color">@color</option>
            }
        </InputSelect>
        <br />
        <button class="btn btn-primary" type="submit">Submit</button> 
        <a href="" @onclick="@(()=> NavigationManager.NavigateTo("/singlelist"))" @onclick:preventDefault class="btn btn-secondaer">Cancel</a>
    </EditForm>
    
</div>

@code {
    private ToDoListItem listItem = new();

    protected override async Task OnInitializedAsync()
    {
        var listId = CurrentRecord.Id["ListId"];
        listItem = await ListService.GetSingleListAsync(Guid.Parse(listId));
    }

    public async Task OnSubmit()
    {
        try
        {
            await ListService.EditListAsync(listItem);
            await ListService.EditTitleColorAsync(listItem);
            NavigationManager.NavigateTo("/singlelist", true);
        }
        catch (Exception)
        {
            return;
        }
        
    }
}
