@page "/createuser"
@using BlazorToDoList.Data;
@using BlazorToDoList.Services;
@using ToDoList.API;
@inject IUserService UserService;
@inject NavigationManager NavigationManager;

<h3 class="mb-4">Create User</h3>
<div>
    <p class="text-danger">@errorMessage</p>
    <EditForm Model="@NewUser" OnValidSubmit="@OnSubmit">
        <DataAnnotationsValidator />
        <p class="mb-2">Username:</p>
        <InputText class="mb-2" id="username" @bind-Value="NewUser.Username" />
        <ValidationMessage For="@(() => NewUser.Username)" />
        <p class="mb-2">Password:</p>
        <InputText class="mb-2" type="password" id="password" @bind-Value="NewUser.Password" />
        <ValidationMessage For="@(() => NewUser.Password)" />
        <p class="mb-2">Email:</p>
        <InputText class="mb-5" id="email" @bind-Value="NewUser.Email" />
        <ValidationMessage For="@(() => NewUser.Email)" />
        <br />
        <button class="btn btn-primary" type="submit">Submit</button>
        <button @onclick="() => Cancel()" class="btn btn-secondary">Cancel</button>
    </EditForm>
</div>

@code {
    private UserItem NewUser { get; set; } = new();
    private UserItem? CurrentUser { get; set; }
    private string errorMessage { get; set; } = "";
    //public string successMessage { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            CurrentUser = await UserService.GetSingleUserAsync();
        }
        catch (Exception)
        {
            CurrentUser = null;
        }
    }
    public async Task OnSubmit()
    {
        try
        {
            NewUser = await UserService.CreateUserAsync(NewUser);
            if (CurrentUser == null)
            {
                //successMessage = "Redirecting to log in.. Log in with your details";
                NavigationManager.NavigateTo("/login", true);
                 
            }
            else
            {
                NavigationManager.NavigateTo("/usersettings", true);
            }

        }
        catch (Exception)
        {
            errorMessage = "User already exists!";
        }

    }

    public void Cancel()
    {
        if (CurrentUser == null)
        {
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            NavigationManager.NavigateTo("/usersettings", true);
        }
    }
}
