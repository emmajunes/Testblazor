@page "/sorttasks"

@using BlazorToDoList.Data;
@using BlazorToDoList.Services;
@using ToDoList.API;
@inject ITaskService TaskService;
@inject IListService ListService;
@inject NavigationManager NavigationManager;

<h3>Sort Tasks</h3>

How do you want to sort?
<br /><br />
<div>
    <EditForm Model="@list" OnSubmit="@Update">
        <InputSelect id="sort" @bind-Value="list.Sortby" class="form-control w-25">

            @foreach (var sort in Enum.GetValues(typeof(SortTask)))
            {
                    <option @onclick="@Update" value="@sort">@sort</option>
            }
        </InputSelect>
        <br /><br />
        <button class="btn btn-primary" type="submit">Update</button>
    <a href="" @onclick="@(()=> NavigationManager.NavigateTo("/singlelist"))" @onclick:preventDefault class="btn btn-secondary">Cancel</a>
    </EditForm>
</div>

@code {
    private ToDoListItem list = new ();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //hämtar ut nuvarande lista för att kunna få startvärdet som hör till just denna lista i dropdown menyn
            var listId = CurrentRecord.Id["ListId"];
            list = await ListService.GetSingleListAsync(Guid.Parse(listId));

        }
        catch (Exception)
        {
            return;
        }
    }

    public async Task Update()
    {
        try
        {
            await TaskService.SortTasksAsync(list);
            NavigationManager.NavigateTo("/singlelist", true);
        }
        catch (Exception)
        {
            return;
        }
        
    }
}
