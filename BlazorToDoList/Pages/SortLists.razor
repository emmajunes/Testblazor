@page "/sortlists"
@using BlazorToDoList.Data;
@using BlazorToDoList.Services;
@inject IListService ListService;
@inject IUserService UserService;
@inject NavigationManager NavigationManager;

<h3>Sort Lists</h3>
<br />

How do you want to sort?
<br /><br />
<div>
    <EditForm Model="@user" OnSubmit="@Update">
        <InputSelect id="sort" @bind-Value="user.SortBy" class="form-control w-25">

            @foreach (var sort in Enum.GetValues(typeof(SortList)))
            {
                <option @onclick="@Update" value="@sort">@sort</option>
            }
        </InputSelect>
        <br /><br />
        <button class="btn btn-primary" type="submit">Update</button>
        <a href="" @onclick="@(()=> NavigationManager.NavigateTo("/currentuserlists"))" @onclick:preventDefault class="btn btn-secondary">Cancel</a>
    </EditForm>
</div>

@code {
    //private SortList sortBy = new();
    private UserItem user = new();
    //private IEnumerable<ToDoListItem> lists = new List<ToDoListItem>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await UserService.GetSingleUserAsync();
            //lists = await ListService.GetCurrentUserListsAsync();
        }
        catch (Exception)
        {
            return;
        }


    }

    public async Task Update()
    {
        try
        {
            await ListService.SortListsAsync(user);
            NavigationManager.NavigateTo("/currentuserlists", true);
        }
        catch (Exception)
        {
            return;
        }
        
    }

}
