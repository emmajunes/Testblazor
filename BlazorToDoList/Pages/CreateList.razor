@page "/createlist"
@using BlazorToDoList.Data;
@using BlazorToDoList.Services;
@using ToDoList.API;
@inject IListService ListService;
@inject NavigationManager NavigationManager;

<h3 class="mb-4">Create new list</h3>
<div>
    <p class="text-danger">@errorMessage</p>
    <EditForm Model="@ListItem" OnValidSubmit="@OnSubmit">
        <DataAnnotationsValidator />
        <p class="mb-2">Title:</p>
        <ValidationMessage For="@(() => ListItem.ListTitle)" />
        <InputText class="mb-2" id="name" @bind-Value="ListItem.ListTitle" /> 
        <p class="mb-2">Color:</p>
        <InputSelect id="color" @bind-Value="ListItem.TitleColor" class="form-control w-25 mb-5">

            @foreach (var color in Enum.GetValues(typeof(Color)))
            {
                <option value="@color">@color</option>
            }
        </InputSelect>
        <button class="btn btn-primary" type="submit">Submit</button>
        <a href="" @onclick="@(()=> NavigationManager.NavigateTo("/currentuserlists"))" @onclick:preventDefault class="btn btn-secondary">Cancel</a>
    </EditForm>
</div>

@code {
    private ToDoListItem ListItem { get; set; } = new();
    private string errorMessage { get; set; } = "";

    public async Task OnSubmit()
    {
        try
        {
            await ListService.CreateListAsync(ListItem);
            NavigationManager.NavigateTo("/currentuserlists", true);
        }
        catch (Exception)
        {
            errorMessage = "Please fill in the form";
        }      
    }
}
